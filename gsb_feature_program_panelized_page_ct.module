<?php
/**
 * @file
 * Code for the GSB Feature Program Panelized Page CT feature.
 */

include_once 'gsb_feature_program_panelized_page_ct.features.inc';

function gsb_feature_program_panelized_page_ct_page_alter(&$page) {
  if ($page['#type'] == 'page') {
    $node = menu_get_object();
    if ($node && $node->type == 'program_panelized_page') {
      $alias = $node->path['alias'];
      $alias = explode('/', $alias);
      $ppp_page_type = $alias[count($alias)-1];
      if ($ppp_page_type == 'curriculum') {
        drupal_set_title('Curriculum');
        $title = $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2];
        $title = str_replace('--- curriculum', '', $title);
        $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2] = $title;
      }
      else if ($ppp_page_type == 'faculty') {
        drupal_set_title('Faculty');
        $title = $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2];
        $title = str_replace('--- faculty', '', $title);
        $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2] = $title;

      }
      else if ($ppp_page_type == 'participant-profile') {
        drupal_set_title('Participant Profile');
        $title = $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2];
        $title = str_replace('--- participant', '', $title);
        $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2] = $title;
      }
      else {
        // fifth page
        drupal_set_title($node->title);
        $title = $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2];
        $title = str_replace($node->title, '', $title);
        $title_parts = explode('|', $title);
        $program_name = '';
        if (!empty($node->field_program[$node->language][0]['target_id'])) {
          $program_nid = $node->field_program[$node->language][0]['target_id'];
          $program_node = node_load($program_nid);
          $program_name = $program_node->title;
        }
        $title = trim($title_parts[0]) . ' ' . $program_name . ' | ' . trim($title_parts[1]);
        $page['content']['metatags']['node:program_panelized_page']['title']['#attached']['metatag_set_preprocess_variable'][0][2] = $title;
      }
    }
  }
}

/**
 * Implements hook_token_info().
 */
function gsb_feature_program_panelized_page_ct_token_info() {
  $info['tokens']['node']['ppp-url-args'] = array(
    'name' => t('Program Panelized Page Url Args'),
    'description' => t('Program Panelized Page Url Args'),
  );
  return $info;
}

/**
 * Implements hook_tokens().
 */
function gsb_feature_program_panelized_page_ct_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  if ($type == 'node' && !empty($data['node'])) {
    $node = $data['node'];
    $language = $node->language;
    foreach ($tokens as $name => $original) {
      if (stristr($name, 'ppp-url-args')) {
        $alias = $data['node']->path['alias'];
        $parsed_url = drupal_parse_url($alias);
        $path = $parsed_url['path'];
        $path = explode('/', $path);
        $last_arg = $path[count($path)-1];
        $last_arg = str_replace('-', ' ', $last_arg);
        $last_arg = explode(' ', $last_arg);
        $ppp_last_arg_title = '';
        foreach($last_arg as $item) {
          if (!empty($ppp_last_arg_title)) {
            $ppp_last_arg_title .= ' ';
          }
          $ppp_last_arg_title .= ucfirst($item);
        }
        $replacements[$original] = $ppp_last_arg_title;
      }
    }
  }
  return $replacements;
}